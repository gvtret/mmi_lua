Icons = {
  ['EMPTY'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00)
  },
  ['TEL'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x01,0xFC,0x00,0x0E,0x00,0x03,0x3F,0xFB,0x04,0x89,0x89,0xD1,0x89,0x11,0x9F,0xFC,0xC0,0x00,0x70,0x00,0x3F,0x80)
  },
  ['WRENCH'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x00,0x24,0x00,0x66,0x00,0x66,0x00,0x7E,0x00,0x3C,0x00,0x18,0x00,0x18,0x00,0x18,0x00,0x18,0x00,0x18,0x00,0x18)
  },
  ['WRENCH_EXCLAMATION'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x08,0x24,0x1C,0x66,0x1C,0x66,0x1C,0x7E,0x08,0x3C,0x00,0x18,0x08,0x18,0x1C,0x18,0x08,0x18,0x00,0x18,0x00,0x18)
  },
  ['MAGNIFIER'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x07,0xC0,0x08,0x20,0x0A,0xA0,0x09,0x20,0x0A,0xA0,0x08,0x20,0x07,0xE0,0x00,0x18,0x00,0x0C,0x00,0x06,0x00,0x03)
  },
  ['DOOR'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x3F,0xC0,0x30,0x44,0x38,0x48,0x3C,0x5F,0x3C,0x48,0x3C,0x44,0x3C,0x40,0x7F,0xE0,0x1C,0x00,0x0C,0x00,0x04,0x00)
  },
  ['PUSHBUTTON'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x00,0x80,0x02,0xA0,0x01,0xC0,0x00,0x80,0x00,0x00,0x07,0xF0,0x0C,0x18,0x2C,0x1A,0x4B,0xE9,0x48,0x09,0x27,0xF2)
  },
  ['TABLE'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x1F,0xFF,0x11,0x11,0x11,0x11,0x1F,0xFF,0x11,0x11,0x11,0x11,0x1F,0xFF,0x11,0x11,0x11,0x11,0x1F,0xFF,0x00,0x00)
  },
  ['SYMLR'] = {
    ['h'] = 11, 
    ['w'] = 16,
    ['data'] = string.char(0x00,0x00,0x04,0x10,0x0C,0x18,0x1C,0x1C,0x3C,0x1E,0x7C,0x1F,0x3C,0x1E,0x1C,0x1C,0x0C,0x18,0x04,0x10,0x00,0x00)  
  }
}

local Control = require('cpmlib.Control')
local Icon = class (Control)

function Icon:init(attrs, logger)
  Control.init(self, attrs, logger)
  self._funcId = 0x02
  local icon_name = 'EMPTY' or attrs.name
  self._imageHeight = self._height or Icons[icon_name].h
  self._imageWidth = self._width or Icons[icon_name].w
  self._imageData = Icons[icon_name].data
  self:draw()
end

function Icon:setType(name)
  if name == nil or name == '' then return end
  if Icons[name] == nil then return end
  self._height = Icons[name].h
  self._width = Icons[name].w
  self._imageData = Icons[name].data
  self:draw()
end

function Icon:draw()
  local left, top = self:getImagePos()
  cpm.drawIcon(self._funcId, bit32.bor(bit32.lshift(self._background, 4), self._foreground),
                self._height, self._width, left, top, self._imageData)
end

function Icon:getImagePos()
  local pos_left = self._left
  local pos_top = self._top
  if self._halign == 'center' then
    pos_left = pos_left + (self._width - self._imageWidth) / 2
  elseif self.halign == 'right' then 
    pos_left = pos_left + self._width - self._imageWidth
  end
  if self._valign == 'center' then
    pos_top = pos_top + (self._height - self._imageHeight) / 2
  elseif self.valign == 'bottom' then 
    pos_top = pos_top + self._height - self._imageHeight
  end
  pos_left = pos_left < self._left and self._left or pos_left
  pos_top = pos_top < self._top and self._top or pos_top
  return pos_left, pos_top 
end
return Icon